{"ast":null,"code":"import { HttpClient } from '@angular/common/http'; // import ngx-translate and the http loader\n\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\"; // ngx-translate - required for AOT compilation\n\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http);\n}\nexport let LanguageTranslationModule = /*#__PURE__*/(() => {\n  class LanguageTranslationModule {\n    constructor(translate) {\n      this.translate = translate; // Gets Default language from browser if available, otherwise set English ad default\n\n      this.translate.addLangs(['en', 'fr', 'ur', 'es', 'it', 'fa', 'de', 'zh-CHS']);\n      this.translate.setDefaultLang('en');\n      const browserLang = this.translate.getBrowserLang();\n      this.translate.use(browserLang.match(/en|fr|ur|es|it|fa|de|zh-CHS/) ? browserLang : 'en');\n    }\n\n  }\n\n  LanguageTranslationModule.ɵfac = function LanguageTranslationModule_Factory(t) {\n    return new (t || LanguageTranslationModule)(i0.ɵɵinject(i1.TranslateService));\n  };\n\n  LanguageTranslationModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: LanguageTranslationModule\n  });\n  LanguageTranslationModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })], TranslateModule]\n  });\n  return LanguageTranslationModule;\n})();","map":null,"metadata":{},"sourceType":"module"}